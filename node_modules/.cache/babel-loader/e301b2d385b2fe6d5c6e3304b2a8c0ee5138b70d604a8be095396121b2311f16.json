{"ast":null,"code":"var _jsxFileName = \"/Users/tanzil/Documents/Mern/ReactCourse/task1/src/components/WordCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Count() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const wordCount = () => {\n    let count = 0;\n    let words = text.split(\" \");\n    for (let i = 0; i < words.length; i++) {\n      if (words[i] !== \"\") {\n        count += 1;\n      }\n    }\n    return count;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Responsive Paragraph Word Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"text\",\n      placeholder: \"Enter text here\",\n      cols: 50,\n      rows: 8,\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Word Count: \", wordCount()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Count, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = Count;\nexport default Count;\nvar _c;\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Count","_s","text","setText","wordCount","count","words","split","i","length","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","cols","rows","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/tanzil/Documents/Mern/ReactCourse/task1/src/components/WordCount.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Count() {\n  const [text, setText] = useState(\"\");\n\n  const wordCount = () => {\n    let count = 0;\n    let words = text.split(\" \");\n    for (let i = 0; i < words.length; i++) {\n      if (words[i] !== \"\") {\n        count += 1;\n      }\n    }\n    return count;\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Responsive Paragraph Word Count</h1>\n      <textarea\n        id=\"text\"\n        placeholder=\"Enter text here\"\n        cols={50}\n        rows={8}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      ></textarea>\n      <p>Word Count: {wordCount()}</p>\n    </div>\n  );\n}\n\nexport default Count;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAIF,KAAK,CAACE,CAAC,CAAC,KAAK,EAAE,EAAE;QACnBH,KAAK,IAAI,CAAC;MACZ;IACF;IACA,OAAOA,KAAK;EACd,CAAC;EAED,oBACEN,OAAA;IAAKW,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCb,OAAA;MAAAa,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCjB,OAAA;MACEkB,EAAE,EAAC,MAAM;MACTC,WAAW,EAAC,iBAAiB;MAC7BC,IAAI,EAAE,EAAG;MACTC,IAAI,EAAE,CAAE;MACRC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACZjB,OAAA;MAAAa,QAAA,GAAG,cAAY,EAACR,SAAS,CAAC,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACf,EAAA,CA5BQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}